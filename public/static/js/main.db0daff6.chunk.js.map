{"version":3,"sources":["Rating.js","product.js","App.js","index.js"],"names":["Rating","reviews","promedio","forEach","review","score","stars","parseInt","length","starshtml","i","className","dangerouslySetInnerHTML","__html","Product","product","manufacturer","name","price","photoUrl","src","alt","href","PRODUCTS_QUERY","gql","App","query","result","loading","error","data","products","map","client","ApolloClient","uri","WrappedApp","render","document","getElementById"],"mappings":"uNAsBeA,EApBA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACVC,EAAW,EACfD,EAAQE,SAAQ,SAAAC,GAAM,OAClBF,GAAYE,EAAOC,SAKvB,IAFA,IAAIC,EAAQC,SAASL,EAASD,EAAQO,QAClCC,EAAY,GACPC,EAAE,EAAGA,EAAGJ,EAAOI,IACpBD,GAAa,qDAEjB,OACI,yBAAKE,UAAU,UACX,uBAAGA,UAAU,mBACT,yBAAKC,wBAAyB,CAAEC,OAAQJ,QCYzCK,EAzBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEXC,EAAiDD,EAAjDC,aAAcC,EAAmCF,EAAnCE,KAAMC,EAA6BH,EAA7BG,MAAOjB,EAAsBc,EAAtBd,QAASkB,EAAaJ,EAAbI,SAE1C,OACE,yBAAKR,UAAU,sCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YAAYS,IAAKD,EAAUE,IAAI,mBAC9C,yBAAKV,UAAU,uBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,OACb,8BAAOK,EAAaC,OAEtB,kBAAC,EAAD,CAAQhB,QAASA,KAEnB,4BAAI,uBAAGqB,KAAK,KAAKL,IACjB,yBAAKN,UAAU,WACb,uBAAGA,UAAU,SAAQ,0BAAMA,UAAU,cAAhB,IAA+BO,EAA/B,a,yPCd1B,IAAMK,E,MAAiBC,GAAH,KAgCZC,EAhBH,kBACR,kBAAC,IAAD,CAAOC,MAAOH,IACX,SAAAI,GAAW,IACFC,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAExB,OAAIF,EACK,wCAELC,EACK,qCAEDC,EAAKC,SAASC,KAAI,SAAAjB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,WC1BzDkB,EAAS,IAAIC,IAAa,CAC9BC,IAAK,kCAGDC,EACJ,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAAC,EAAD,OAIJI,iBAAOD,EAAYE,SAASC,eAAe,W","file":"static/js/main.db0daff6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Rating = ({ reviews }) => {\n    let promedio = 0;\n    reviews.forEach(review =>\n        promedio += review.score\n    );\n\n    let stars = parseInt(promedio/reviews.length);\n    let starshtml = '';\n    for (let i=0; i< stars; i++) {\n        starshtml += \"<a href='#'><span class='ion-ios-star'></span></a>\"\n    }\n    return (\n        <div className=\"rating\">\n            <p className=\"text-right mb-0\">\n                <div dangerouslySetInnerHTML={{ __html: starshtml }}></div>\n            </p>\n        </div>\n    );\n};\n\nexport default Rating;\n","import React from 'react';\nimport Rating from './Rating';\n\nconst Product = ({ product }) => {\n\n  let { manufacturer, name, price, reviews, photoUrl } = product;\n\n  return (\n    <div className=\"col-sm-12 col-md-6 col-lg-3 d-flex\">\n      <div className=\"product d-flex flex-column\">\n        <img className=\"img-fluid\" src={photoUrl} alt=\"product single\" />\n        <div className=\"text py-3 pb-4 px-3\">\n          <div className=\"d-flex\">\n            <div className=\"cat\">\n              <span>{manufacturer.name}</span>\n            </div>\n            <Rating reviews={reviews} />\n          </div>\n          <h3><a href=\"/\">{name}</a></h3>\n          <div className=\"pricing\">\n            <p className=\"price\"><span className=\"mr-2 price\">${price}.00</span></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","import React from 'react';\nimport { Query } from '@apollo/react-components';\nimport gql from 'graphql-tag';\n\nimport Product from './product';\n\nexport const PRODUCTS_QUERY = gql`\n  query GetProducts {\n    products {\n      name\n      manufacturer {\n        name\n      }\n      price\n      reviews {\n        score\n      }\n      photoUrl\n    }\n  }\n`;\n\nconst App = () => (\n    <Query query={PRODUCTS_QUERY}>\n      {result => {\n        const { loading, error, data } = result;\n\n        if (loading) {\n          return <div>Loading</div>;\n        }\n        if (error) {\n          return <h1>ERROR</h1>;\n        }\n        return (data.products.map(product => <Product product={product}/>))\n      }}\n    </Query>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-components';\n\nimport App from './App';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql'\n});\n\nconst WrappedApp = (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n\nrender(WrappedApp, document.getElementById('root'));\n"],"sourceRoot":""}